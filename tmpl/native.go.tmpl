package {{.PkgName}}

import (
{{- if gt .InputLen 0}}
	"fmt"
{{- end}}
	"os"
	"path/filepath"
	"testing"
{{- range .Imports}}
	"{{.}}"
{{- end}}
)

func Fuzz{{.FuncName}}(f *testing.F) {
	loadTestCases(f)
	f.Fuzz(func(_ *testing.T, input {{.InputType}}) { Fuzz(input) })
}

func loadTestCases(f *testing.F) {
	dir, err := os.ReadDir(`{{.CorpusDir}}`)
	if err != nil {
		f.Fatal(err)
	}

	for _, corpus := range dir {
		if corpus.IsDir() {
			continue
		}

		input, err := os.ReadFile(filepath.Join(`{{.CorpusDir}}`, corpus.Name()))
		if err != nil {
			f.Fatal(err)
		}

{{- if gt .InputLen 0}}
		checkInputLength(input)
{{- end}}
		f.Add({{.InputCode}})
	}
}

{{- if gt .InputLen 0}}
func checkInputLength(input []byte) {
	if len(input) != {{.InputLen}} {
		panic(fmt.Sprintf(`invalid corpus: must be {{.InputLen}} bytes long for {{.InputType}} conversion`))
	}
}
{{- end}}
